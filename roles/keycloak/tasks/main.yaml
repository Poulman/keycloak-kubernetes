---

####################
# Install Keycloak
####################

# Create full SSL chain for the public key

- name: Download intermediate certificate
  get_url:
    url: "{{ full_chain_cert }}"
    dest: /tmp/ca_chain.crt
    mode: 0744
  when:
    - full_chain_cert is defined

- name: Merge cert with chain
  shell: "cat {{ cert_path }} /tmp/ca_chain.crt > /tmp/full_chain.crt"
  when:
    - full_chain_cert is defined

- set_fact:
    full_chain: "/tmp/full_chain.crt"
  when:
    - full_chain_cert is defined

- set_fact:
    full_chain: "{{ cert_path }}"
  when:
    - full_chain_cert is not defined

# Render templates

- name: Generate deplyoment
  template:
    src: keycloak.yaml.j2
    dest: /tmp/keycloak.yaml
    mode: 0744
  become: false

# Deploy Keycloak

- name: Deploy Keycloak
  command: "kubectl --namespace {{ namespace }} apply -f /tmp/keycloak.yaml"

- name: Verify that all pods are ready
  shell: kubectl --namespace {{ namespace }} get pods | grep "keycloak" | grep "Running" | wc -l
  register: cmd_result
  until: cmd_result.stdout.find('1') != -1
  retries: 20
  delay: 30

# Create Route53 alias

- name: Get the loadbalancer details
  command: "kubectl --namespace {{ namespace }} get ingress keycloak -o json"
  register: get_loadbalancer

- set_fact:
    loadbalancer: "{{ get_loadbalancer.stdout | from_json }}"

- set_fact:
    loadbalancer_dns_name: "{{ loadbalancer['status']['loadBalancer']['ingress'][0]['hostname'] }}"

- route53:
    command: create
    zone: "{{ dns_zone }}"
    record: "{{ keycloak_dns }}"
    type: A
    value: "{{ loadbalancer_dns_name }}"
    alias: True
    alias_hosted_zone_id: "{{ elb_hosted_zone }}"
    alias_evaluate_target_health: False
    overwrite: True
